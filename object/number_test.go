package object_test

import "testing"

func TestNumberObjects(t *testing.T) {
	tests := []inputTestCase{
		// integer | integer
		{"1 == 1", true},
		{"1 == 2", false},

		{"1 != 1", false},
		{"1 != 2", true},

		{"1 < 2", true},
		{"1 < 1", false},

		{"2 > 1", true},
		{"1 > 2", false},

		{"0+0", 0},
		{"0+1", 1},
		{"1+2", 3},

		{"0-0", 0},
		{"0-1", -1},
		{"1-0", 1},
		{"1-2", -1},
		{"2-1", 1},

		{"1*1", 1},
		{"1*2", 2},
		{"1*0", 0},
		{"2*1", 2},
		{"0*1", 0},

		{"1/1", 1},
		{"1/2", 0.5},
		{"2/1", 2},

		// float | float
		{"1.0 == 1.0", true},
		{"1.0 == 2.0", false},

		{"1.0 != 1.0", false},
		{"1.0 != 2.0", true},

		{"1.0 < 2.0", true},
		{"1.0 < 1.0", false},

		{"2.0 > 1.0", true},
		{"1.0 > 2.0", false},

		{"0.0+0.0", 0.0},
		{"0.0+1.0", 1.0},
		{"1.0+2.0", 3.0},
		{"1.2+3.4", 4.6},

		{"0.0-0.0", 0.0},
		{"0.0-1.0", -1.0},
		{"1.0-0.0", 1.0},
		{"1.0-2.0", -1.0},
		{"2.0-1.0", 1.0},
		{"3.4-1.2", 2.2},

		{"1.0*1.0", 1.0},
		{"1.0*2.0", 2.0},
		{"1.0*0.0", 0.0},
		{"2.0*1.0", 2.0},
		{"0.0*1.0", 0.0},
		{"1.2*3.4", 4.08},

		{"1.0/1.0", 1.0},
		{"1.0/2.0", 0.5},
		{"2.0/1.0", 2.0},
		{"6.8/3.4", 2.0},

		// integer | float
		{"1 == 1.0", false},
		{"1 == 2.0", false},

		{"1 != 1.0", true},
		{"1 != 2.0", true},

		{"1 < 2.0", true},
		{"1 < 1.0", false},

		{"2 > 1.0", true},
		{"1 > 2.0", false},

		{"0+0.0", 0.0},
		{"0+1.0", 1.0},
		{"1+2.0", 3.0},
		{"1+3.4", 4.4},

		{"0-0.0", 0.0},
		{"0-1.0", -1.0},
		{"1-0.0", 1.0},
		{"1-2.0", -1.0},
		{"2-1.0", 1.0},
		{"3-1.2", 1.8},

		{"1*1.0", 1.0},
		{"1*2.0", 2.0},
		{"1*0.0", 0.0},
		{"2*1.0", 2.0},
		{"0*1.0", 0.0},
		{"3*1.2", 3.5999999999999996},

		{"1/1.0", 1.0},
		{"1/2.0", 0.5},
		{"2/1.0", 2.0},

		// float | integer
		{"1.0 == 1", false},
		{"1.0 == 2", false},

		{"1.0 != 1", true},
		{"1.0 != 2", true},

		{"1.0 < 2", true},
		{"1.0 < 1", false},

		{"2.0 > 1", true},
		{"1.0 > 2", false},

		{"0.0+0", 0.0},
		{"0.0+1", 1.0},
		{"1.0+2", 3.0},
		{"1.2+3", 4.2},

		{"0.0-0", 0.0},
		{"0.0-1", -1.0},
		{"1.0-0", 1.0},
		{"1.0-2", -1.0},
		{"2.0-1", 1.0},
		{"3.4-1", 2.4},

		{"1.0*1", 1.0},
		{"1.0*2", 2.0},
		{"1.0*0", 0.0},
		{"2.0*1", 2.0},
		{"0.0*1", 0.0},
		{"1.2*3", 3.5999999999999996},

		{"1.0/1", 1.0},
		{"1.0/2", 0.5},
		{"2.0/1", 2.0},

		// float var | integer
		{"a = 1.0; a == 1", false},
		{"a = 1.0; a == 2", false},

		{"a = 1.0; a != 1", true},
		{"a = 1.0; a != 2", true},

		{"a = 1.0; a < 2", true},
		{"a = 1.0; a < 1", false},

		{"a = 2.0; a > 1", true},
		{"a = 1.0; a > 2", false},

		{"a = 0.0; a = a+0; a", 0.0},
		{"a = 0.0; a = a+1; a", 1.0},
		{"a = 1.0; a = a+2; a", 3.0},
		{"a = 1.2; a = a+3; a", 4.2},

		{"a = 0.0; a = a-0; a", 0.0},
		{"a = 0.0; a = a-1; a", -1.0},
		{"a = 1.0; a = a-0; a", 1.0},
		{"a = 1.0; a = a-2; a", -1.0},
		{"a = 2.0; a = a-1; a", 1.0},
		{"a = 3.4; a = a-1; a", 2.4},

		{"a = 1.0; a = a*1; a", 1.0},
		{"a = 1.0; a = a*2; a", 2.0},
		{"a = 1.0; a = a*0; a", 0.0},
		{"a = 2.0; a = a*1; a", 2.0},
		{"a = 0.0; a = a*1; a", 0.0},
		{"a = 1.2; a = a*3; a", 3.5999999999999996},

		{"a = 1.0; a = a/1; a", 1.0},
		{"a = 1.0; a = a/2; a", 0.5},
		{"a = 2.0; a = a/1; a", 2.0},

		// integer var | float
		{"a = 1; a == 1.0", false},
		{"a = 1; a == 2.0", false},

		{"a = 1; a != 1.0", true},
		{"a = 1; a != 2.0", true},

		{"a = 1; a < 2.0", true},
		{"a = 1; a < 1.0", false},

		{"a = 2; a > 1.0", true},
		{"a = 1; a > 2.0", false},

		{"a = 0; a = a+0.0; a", 0.0},
		{"a = 0; a = a+1.0; a", 1.0},
		{"a = 1; a = a+2.0; a", 3.0},
		{"a = 1; a = a+3.4; a", 4.4},

		{"a = 0; a = a-0.0; a", 0.0},
		{"a = 0; a = a-1.0; a", -1.0},
		{"a = 1; a = a-0.0; a", 1.0},
		{"a = 1; a = a-2.0; a", -1.0},
		{"a = 2; a = a-1.0; a", 1.0},
		{"a = 3; a = a-1.2; a", 1.8},

		{"a = 1; a = a*1.0; a", 1.0},
		{"a = 1; a = a*2.0; a", 2.0},
		{"a = 1; a = a*0.0; a", 0.0},
		{"a = 2; a = a*1.0; a", 2.0},
		{"a = 0; a = a*1.0; a", 0.0},
		{"a = 3; a = a*1.2; a", 3.5999999999999996},

		{"a = 1; a = a/1.0; a", 1.0},
		{"a = 1; a = a/2.0; a", 0.5},
		{"a = 2; a = a/1.0; a", 2.0},

		// division by zero
		{"1.0 / 0", "devision by zero not allowed"},
		{"1.0 / 0.0", "devision by zero not allowed"},
		{"1 / 0", "devision by zero not allowed"},
		{"1 / 0.0", "devision by zero not allowed"},
	}

	testInput(t, tests)
}
