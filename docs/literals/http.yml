title: "HTTP"
example: |
  def test()
    puts(request["body"])
    return("test")
  end

  HTTP.handle("/", test)

  HTTP.listen(3000)

  // Example request hash:
  // {"protocol": "HTTP/1.1", "protocolMajor": 1, "protocolMinor": 1, "body": "servus", "method": "POST", "host": "localhost:3000", "contentLength": 6}
methods:
  listen:
    description: "Starts a blocking webserver on the given port."
    input: |
      HTTP.listen(3000)
  handle:
    description: |
      Adds a handle to the global HTTP server. Needs to be done before starting one via .listen().
      Inside the function a variable called "request" will be populated which is a hash with information about the request.

      Also a variable called "response" will be created which will be returned automatically as a response to the client.
      The response can be adjusted to the needs. It is a HASH supports the following content:

      - "status" needs to be an INTEGER (eg. 200, 400, 500). Default is 200.
      - "body" needs to be a STRING. Default ""
      - "headers" needs to be a HASH(STRING:STRING) eg. headers["Content-Type"] = "text/plain". Default is {"Content-Type": "text/plain"}
    input: |
      HTTP.handle("/", callback_func)
