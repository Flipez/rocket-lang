"// A solution for part 1 of https://adventofcode.com/2015/day/1"
"// Last Updated: 2021.09.28"
"// RocketLang Version: 0.9.6-rc1"
"------------------------------------"

let part_one = fn(input) {  
  let floor = 0
  let idx = len(input)

  "// There are no loops at the moment so use recursion instead"
  calc(input, idx, floor)
}

let calc = fn(input,idx,floor) {
  let char_to_value = {
    "(": 1,
    ")": -1
  }
  
  if (idx == 0) {
    return floor
  }
  
  let new_idx = idx - 1
  let delta = char_to_value[input[new_idx]]
  
  calc(input, new_idx, floor + delta)
}

"// Test some inputs to check that our code is correct..."
if (part_one(["(", "(", ")", ")"]) != 0) {
  puts("Assertion ((( => 0 failed")
}

"// ... for multiple known results."
if (part_one([")","(",")",")","(",")",")"]) != -3) {
  puts("Assertion )())()) => -3 failed")
}

"// There aren't any usefull string operations in RocketLang yet so you have to prepare"
"// the input code a bit - in this case as an array of strings, like this:"
let real_input = [
  "(",")","(",")","(","(",")","(",")","(",")","(","(",")","(",")","(","(","(",")","(","(","(",")",")",
  ")","(","(","(",")","(","(","(","(","(",")","(",")","(","(","(","(","(",")",")",")","(",")","(","(",
  "(","(","(",")",")","(","(","(","(","(","(","(","(",")","(","(","(","(","(","(","(","(","(","(",")",
  "(","(","(","(",")",")","(","(",")","(",")","(","(",")","(","(","(",")","(",")","(","(",")","(","(",
  ")",")","(","(",")","(","(","(","(","(",")","(","(","(",")","(",")","(",")","(","(","(","(","(",")",
  ")","(","(","(","(","(","(","(",")","(","(",")","(","(","(","(",")","(",")",")","(","(",")","(","(",
  "(","(","(",")",")",")","(",")",")","(","(",")",")","(","(",")","(","(",")","(",")",")",")",")",")",
  ")",")",")",")","(","(","(","(","(","(","(","(","(","(","(","(","(",")","(",")",")","(",")","(",")",
  ")","(",")",")","(","(",")",")",")",")","(","(","(","(",")","(",")","(",")","(","(","(","(","(",")",
  "(","(","(","(",")","(","(",")","(","(",")","(",")","(","(",")","(","(",")","(",")","(","(",")","(",
  "(","(","(","(","(","(","(",")",")","(","(",")",")","(","(",")",")","(",")",")",")",")","(","(","(",
  ")","(",")",")","(",")","(","(","(","(","(",")","(",")","(","(","(",")",")",")","(","(","(","(",")",
  "(",")","(",")","(",")",")",")",")","(","(",")",")",")",")","(","(","(","(","(",")",")","(","(","(",
  "(",")","(",")",")","(","(",")",")","(","(",")",")",")","(","(",")","(","(","(","(","(",")","(",")",
  ")",")",")","(",")",")","(","(","(",")","(","(",")",")","(","(","(","(",")","(","(","(","(","(",")",
  "(","(","(",")","(","(",")",")","(",")",")",")",")","(","(","(",")",")",")","(",")","(",")","(","(",
  ")","(","(",")",")",")",")",")","(","(","(","(","(","(","(","(","(",")","(",")",")","(","(","(","(",
  "(",")","(",")","(","(","(","(","(",")","(","(",")","(",")",")","(","(","(","(","(","(",")","(","(",
  ")","(",")",")","(",")",")",")","(",")",")","(","(","(","(",")",")",")","(",")","(","(",")","(","(",
  ")","(","(",")","(","(","(","(","(",")","(","(",")",")","(","(",")",")",")","(","(","(","(","(","(",
  ")","(",")","(","(",")","(",")","(",")","(","(",")","(","(","(","(",")",")","(",")",")","(","(","("
]

puts("Solution Day 1 Part 1: ")
puts(part_one(real_input))
